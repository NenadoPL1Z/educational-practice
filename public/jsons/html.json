{
  "info": [
    {
      "type": "h1",
      "content": "Основы HTML"
    },
    {
      "type": "p",
      "content": "HTML (Hypertext Markup Language) - это код, который используется для структурирования и отображения веб-страницы и её контента. Например, контент может быть структурирован внутри множества параграфов, маркированных списков или с использованием изображений и таблиц данных. Как видно из названия, эта статья даст вам базовое понимание HTML и его функций.\n\n"
    },
    {
      "type": "code",
      "content": "Моя кошка очень раздражена"
    },
    {
      "type": "p",
      "content": "Если бы мы хотели, чтобы строка стояла сама по себе, мы могли бы указать, что это абзац, заключая его в теги абзаца:\n\n"
    },
    {
      "type": "code",
      "content": "<p>Моя кошка очень раздражена</p>\n"
    },
    {
      "type": "h1",
      "content": "Анатомия HTML элемента"
    },
    {
      "type": "p",
      "content": "Давайте рассмотрим элемент абзаца более подробно.\n\n"
    },
    {
      "type": "img",
      "content": "grumpy-cat-small.png"
    },
    {
      "type": "p",
      "content": "Главными частями нашего элемента являются:\n\n"
    },
    {
      "type": "li",
      "content": "Открывающий тег (Opening tag): Состоит из имени элемента (в данном случае, \"p\"), заключённого в открывающие и закрывающие угловые скобки. Открывающий тег указывает, где элемент начинается или начинает действовать, в данном случае — где начинается абзац.\n"
    },
    {
      "type": "li",
      "content": "Закрывающий тег (Closing tag): Это то же самое, что и открывающий тег, за исключением того, что он включает в себя косую черту перед именем элемента. Закрывающий элемент указывает, где элемент заканчивается, в данном случае — где заканчивается абзац. Отсутствие закрывающего тега является одной из наиболее распространённых ошибок начинающих и может приводить к странным результатам.\n"
    },
    {
      "type": "li",
      "content": "Контент (Content): Это контент элемента, который в данном случае является просто текстом.\n"
    },
    {
      "type": "li",
      "content": "Элемент(Element): Открывающий тег, закрывающий тег и контент вместе составляют элемент.\n"
    },
    {
      "type": "p",
      "content": "Элементы также могут иметь атрибуты, которые выглядят так:\n\n"
    },
    {
      "type": "img",
      "content": "grumpy-cat-attribute-small.png"
    },
    {
      "type": "p",
      "content": "Атрибуты содержат дополнительную информацию об элементе, которую вы не хотите показывать в фактическом контенте. В данном случае, class это имя атрибута, а editor-note это значение атрибута. Класс позволяет дать элементу идентификационное имя, которое может позже использоваться, чтобы обращаться к элементу с информацией о стиле и прочих вещах.\n\n"
    },
    {
      "type": "p",
      "content": "Атрибут всегда должен иметь:\n\n"
    },
    {
      "type": "li",
      "content": "Пробел между ним и именем элемента (или предыдущим атрибутом, если элемент уже имеет один или несколько атрибутов).\n"
    },
    {
      "type": "li",
      "content": "Имя атрибута, за которым следует знак равенства.\n"
    },
    {
      "type": "li",
      "content": "Значение атрибута, заключённое с двух сторон в кавычки.\n"
    },
    {
      "type": "h1",
      "content": "Вложенные элементы"
    },
    {
      "type": "p",
      "content": "Вы также можете располагать элементы внутри других элементов — это называется вложением. Если мы хотим заявить, что наша кошка очень раздражена, мы можем заключить слово \"очень\" в элемент <strong> , который указывает, что слово должно быть сильно акцентированно:\n\n"
    },
    {
      "type": "code",
      "content": "<p>Моя кошка <strong>очень</strong> раздражена.</p>\n"
    },
    {
      "type": "p",
      "content": "Вы, однако, должны убедиться, что ваши элементы правильно вложены: в примере выше мы открыли первым элемент <p>, затем элемент <strong>, потом мы должны закрыть сначала элемент <strong>, затем <p>. Приведённое ниже неверно:\n\n"
    },
    {
      "type": "code",
      "content": "<p>Моя кошка <strong>очень раздражена.</p></strong>\n"
    },
    {
      "type": "p",
      "content": "Элементы должны открываться и закрываться правильно, поэтому они явно располагаются внутри или снаружи друг друга. Если они перекрываются, как в примере выше, ваш веб-браузер будет пытаться сделать наилучшее предположение на основе того, что вы пытались сказать, что может привести к неожиданным результатам. Так что не стоит этого делать!\n\n"
    },
    {
      "type": "h1",
      "content": "Пустые элементы"
    },
    {
      "type": "p",
      "content": "Некоторые элементы не имеют контента, и называются пустыми элементами. Возьмём элемент <img>, который уже имеется в нашем HTML:\n\n"
    },
    {
      "type": "code",
      "content": "<img src=\"images/firefox-icon.png\" alt=\"Моё тестовое изображение\">\n"
    },
    {
      "type": "p",
      "content": "Он содержит два атрибута, но не имеет закрывающего тега </img>, и никакого внутреннего контента. Это потому, что элемент изображения не оборачивает контент для влияния на него. Его целью является вставка изображения в HTML страницу в нужном месте.\n\n"
    },
    {
      "type": "h1",
      "content": "Анатомия HTML документа"
    },
    {
      "type": "p",
      "content": "Мы завершили изучение основ отдельных HTML элементов, но они не очень полезны сами по себе. Теперь мы посмотрим, как отдельные элементы объединяются в целую HTML страницу. Давайте вернёмся к коду, который мы записывали в наш index.html (с которым мы впервые встретились в статье Работа с файлами):\n\n"
    },
    {
      "type": "code",
      "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Моя тестовая страница</title>\n  </head>\n  <body>\n    <img src=\"images/firefox-icon.png\" alt=\"Моё тестовое изображение\">\n  </body>\n</html>\n"
    }
  ],
  "video": "https://www.youtube.com/embed/DOEtVdkKwcU",
  "tasks": [
    "Создать html файл",
    "Написать базовую разметку",
    "Использовать все теги описанные в данном введении",
    "Открыть файл в браузере",
    "Посмотреть результат"
  ],
  "result": "finished-test-page-small.png",
  "test": {
    "head": "Тест для закрепления материала",
    "body": [
      {
        "title": "Что такое html?",
        "content": [
          {
            "title": "Cтандартизированный язык гипертекстовой разметки документов для просмотра веб-страниц",
            "result": true
          },
          {
            "title": "Текстовый файл",
            "result": false
          },
          {
            "title": "Язык прорграммирования",
            "result": false
          }
        ]
      },
      {
        "title": "Какого тега нет в html?",
        "content": [
          {
            "title": "div",
            "result": false
          },
          {
            "title": "p",
            "result": false
          },
          {
            "title": "transform",
            "result": true
          }
        ]
      },
      {
        "title": "Какой тег есть в html",
        "content": [
          {
            "title": "pretty",
            "result": true
          },
          {
            "title": "img",
            "result": true
          },
          {
            "title": "p",
            "result": false
          }
        ]
      }
    ]
  }
}